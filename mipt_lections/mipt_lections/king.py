# Сколькими способами шахматный король сможет добраться до нижней
# правой клетке если ему можно шагать толкьо в вправо и вниз
# Необходимо подсчитать кол-во возможных траекторий
# решение через динамическое программирование

# Задается кол-во клеток по вертикали и горизонтали
def king(n: int, m: int):
    if n == 1 or m == 1:
        return 1
    c = [[0] * (m + 1) for _ in range(n + 1)]
    c[2][1] = c[1][2] = 1
    for i in range(1, n + 1):
        for j in range(1, m + 1):
            # print(i,j)
            if c[i][j] == 0:
                c[i][j] = c[i - 1][j] + c[i][j - 1]
    # Печатается матрица покрыти явсех ходов, рассчитанная через
    # функционального программирования
    print(*c, sep="\n")
    # Возвращается кол-во всех возможных комбинаций
    return c[n][m]


# Задается кол-во клеток по вертикали и горизонтали
# Резульат
weight = 5
height = 2
count = king(height, weight)
print(f"Кол-во возможных траекторий движения короля в нижнюю правую клетку",
      f"для доски {height}x{weight}:", count)
